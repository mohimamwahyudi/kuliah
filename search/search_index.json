{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"Home/","text":"\u00b6 profil \u200b Nama : moh.imam wahyudi \u200b Nim : 180411100007 \u200b Prodi : Teknik Informatika","title":"profil"},{"location":"Home/#_1","text":"profil \u200b Nama : moh.imam wahyudi \u200b Nim : 180411100007 \u200b Prodi : Teknik Informatika","title":""},{"location":"tugas1/","text":"Eror di komputasi numerik \u00b6 1.round-off error Perhitungan dengan metode numerik hampir selalu menggunakan bilangan riil.Masalah timbul apabila komputasi numerik dikerjakan oleh mesin (dalam hal ini dengan menggunakan komputer) karena semua bilangan riil tidak dapat disajikan secara tepat di dalam komputer 2. Truncation Error Kesalahan pemotongan terjadi ketika suatu rumus komputasi disederhanakan dengan cara membuang suku yang berderajat tinggi DEFINISI MACLAURIN \u00b6 Suatu fungsi f(x) yang memiliki turunan , , , dan seterusnya yang kontinyu dalam interval dengan maka untuk disekitar yaitu , dapat diekspansi kedalam Deret TaylorDefinisi. Berikut algoritma dari maclaurin \u00b6 Dengan algoritma diatas kita dapat menyerderhanakannya sebagai berikut: berikut contoh implementai dari maclaurin f(x)= e 2x $$ f(x)\u22481+2x \\displaystyle+\\frac{{{{f}^{{\\text{}}}{\\left({2x^2}\\right)}}}}{{{3}!}} \\displaystyle+\\frac{{{{f}^{{\\text{}}}{\\left({2x^3}\\right)}}}}{{{3}!}} \\displaystyle+\\ldots+\u2026 $$ sekarang kita masukan misal x=0 $$ f(0)\u22481+2(0) \\displaystyle+\\frac{{{{}^{{\\text{}}}{\\left({2(0)^2}\\right)}}}}{{{3}!}} \\displaystyle+\\frac{{{{}^{{\\text{}}}{\\left({2(0)^3}\\right)}}}}{{{3}!}} \\displaystyle+\\ldots+\u2026 $$ jadi ketika x =0 maka hasil akan tetap 1 mekipun banyak suku dan literasi Listing Program \u00b6 membuat program supaya dapaat mengekspansi bilangan e^3x dengan nilai x=inputan hingga nilai menjadi kurang dari 0,001 bisa dengan listing program sebagai berikut. import math x = int ( input ( \"masukan nilai x=\" )) coba = 1 a = 0 b = 1 while coba > 0.001 : f_x = 0 f_y = 0 for i in range ( a ): f_x += ( 3 ** i ) * x ** i / math . factorial ( i ) for j in range ( b ): f_y += ( 3 ** j ) * x ** j / math . factorial ( j ) print ( \"suku ke\" , a , \"=\" , f_x ) print ( \"suku ke\" , b , \"=\" , f_y ) coba = f_y - f_x a += 1 b += 1 print ( \"hasil seliih =\" , coba ) output: masukan nilai x = 1 suku ke 0 = 0 suku ke 1 = 1.0 hasil seliih = 1.0 suku ke 1 = 1.0 suku ke 2 = 4.0 hasil seliih = 3.0 suku ke 2 = 4.0 suku ke 3 = 8.5 hasil seliih = 4.5 suku ke 3 = 8.5 suku ke 4 = 13.0 hasil seliih = 4.5 suku ke 4 = 13.0 suku ke 5 = 16.375 hasil seliih = 3.375 suku ke 5 = 16.375 suku ke 6 = 18.4 hasil seliih = 2.0249999999999986 suku ke 6 = 18.4 suku ke 7 = 19.412499999999998 hasil seliih = 1.0124999999999993 suku ke 7 = 19.412499999999998 suku ke 8 = 19.846428571428568 hasil seliih = 0.4339285714285701 suku ke 8 = 19.846428571428568 suku ke 9 = 20.009151785714284 hasil seliih = 0.162723214285716 suku ke 9 = 20.009151785714284 suku ke 10 = 20.063392857142855 hasil seliih = 0.05424107142857082 suku ke 10 = 20.063392857142855 suku ke 11 = 20.079665178571425 hasil seliih = 0.016272321428569825 suku ke 11 = 20.079665178571425 suku ke 12 = 20.08410308441558 hasil seliih = 0.004437905844156376 suku ke 12 = 20.08410308441558 suku ke 13 = 20.08521256087662 hasil seliih = 0.001109476461039094 suku ke 13 = 20.08521256087662 suku ke 14 = 20.08546859390609 hasil seliih = 0.0002560330294691937 MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$'],['$','$']]} });","title":"error"},{"location":"tugas1/#eror-di-komputasi-numerik","text":"1.round-off error Perhitungan dengan metode numerik hampir selalu menggunakan bilangan riil.Masalah timbul apabila komputasi numerik dikerjakan oleh mesin (dalam hal ini dengan menggunakan komputer) karena semua bilangan riil tidak dapat disajikan secara tepat di dalam komputer 2. Truncation Error Kesalahan pemotongan terjadi ketika suatu rumus komputasi disederhanakan dengan cara membuang suku yang berderajat tinggi","title":"Eror di komputasi numerik"},{"location":"tugas1/#definisi-maclaurin","text":"Suatu fungsi f(x) yang memiliki turunan , , , dan seterusnya yang kontinyu dalam interval dengan maka untuk disekitar yaitu , dapat diekspansi kedalam Deret TaylorDefinisi.","title":"DEFINISI MACLAURIN"},{"location":"tugas1/#berikut-algoritma-dari-maclaurin","text":"Dengan algoritma diatas kita dapat menyerderhanakannya sebagai berikut: berikut contoh implementai dari maclaurin f(x)= e 2x $$ f(x)\u22481+2x \\displaystyle+\\frac{{{{f}^{{\\text{}}}{\\left({2x^2}\\right)}}}}{{{3}!}} \\displaystyle+\\frac{{{{f}^{{\\text{}}}{\\left({2x^3}\\right)}}}}{{{3}!}} \\displaystyle+\\ldots+\u2026 $$ sekarang kita masukan misal x=0 $$ f(0)\u22481+2(0) \\displaystyle+\\frac{{{{}^{{\\text{}}}{\\left({2(0)^2}\\right)}}}}{{{3}!}} \\displaystyle+\\frac{{{{}^{{\\text{}}}{\\left({2(0)^3}\\right)}}}}{{{3}!}} \\displaystyle+\\ldots+\u2026 $$ jadi ketika x =0 maka hasil akan tetap 1 mekipun banyak suku dan literasi","title":"Berikut algoritma dari maclaurin"},{"location":"tugas1/#listing-program","text":"membuat program supaya dapaat mengekspansi bilangan e^3x dengan nilai x=inputan hingga nilai menjadi kurang dari 0,001 bisa dengan listing program sebagai berikut. import math x = int ( input ( \"masukan nilai x=\" )) coba = 1 a = 0 b = 1 while coba > 0.001 : f_x = 0 f_y = 0 for i in range ( a ): f_x += ( 3 ** i ) * x ** i / math . factorial ( i ) for j in range ( b ): f_y += ( 3 ** j ) * x ** j / math . factorial ( j ) print ( \"suku ke\" , a , \"=\" , f_x ) print ( \"suku ke\" , b , \"=\" , f_y ) coba = f_y - f_x a += 1 b += 1 print ( \"hasil seliih =\" , coba ) output: masukan nilai x = 1 suku ke 0 = 0 suku ke 1 = 1.0 hasil seliih = 1.0 suku ke 1 = 1.0 suku ke 2 = 4.0 hasil seliih = 3.0 suku ke 2 = 4.0 suku ke 3 = 8.5 hasil seliih = 4.5 suku ke 3 = 8.5 suku ke 4 = 13.0 hasil seliih = 4.5 suku ke 4 = 13.0 suku ke 5 = 16.375 hasil seliih = 3.375 suku ke 5 = 16.375 suku ke 6 = 18.4 hasil seliih = 2.0249999999999986 suku ke 6 = 18.4 suku ke 7 = 19.412499999999998 hasil seliih = 1.0124999999999993 suku ke 7 = 19.412499999999998 suku ke 8 = 19.846428571428568 hasil seliih = 0.4339285714285701 suku ke 8 = 19.846428571428568 suku ke 9 = 20.009151785714284 hasil seliih = 0.162723214285716 suku ke 9 = 20.009151785714284 suku ke 10 = 20.063392857142855 hasil seliih = 0.05424107142857082 suku ke 10 = 20.063392857142855 suku ke 11 = 20.079665178571425 hasil seliih = 0.016272321428569825 suku ke 11 = 20.079665178571425 suku ke 12 = 20.08410308441558 hasil seliih = 0.004437905844156376 suku ke 12 = 20.08410308441558 suku ke 13 = 20.08521256087662 hasil seliih = 0.001109476461039094 suku ke 13 = 20.08521256087662 suku ke 14 = 20.08546859390609 hasil seliih = 0.0002560330294691937 MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$'],['$','$']]} });","title":"Listing Program"}]}